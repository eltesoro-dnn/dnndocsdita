{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Structured Content API",
        "description": "Build 01.16.00.12"
    },
    "host": "qa-sc.dnnapi.com:80",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/ApiKeys/{id}/Reset": {
            "post": {
                "tags": [
                    "ApiKeys"
                ],
                "operationId": "Api Keys: Post Reset Api Key",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKey"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-api-key:write"
                        ]
                    }
                ]
            }
        },
        "/api/ApiKeys": {
            "get": {
                "tags": [
                    "ApiKeys"
                ],
                "operationId": "Api Keys: Get Api Keys",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchtext",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldorder",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderasc",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdfrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdto",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.ApiKeys.ApiKey]"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-api-key:read"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApiKeys"
                ],
                "operationId": "Api Keys: Post Api Key",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "apiKeyDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKeyCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKey"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-api-key:write"
                        ]
                    }
                ]
            }
        },
        "/api/ApiKeys/{id}": {
            "get": {
                "tags": [
                    "ApiKeys"
                ],
                "operationId": "Api Keys: Get Api Key",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKey"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-api-key:read"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApiKeys"
                ],
                "operationId": "Api Keys: Put Api Key",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "apiKeyDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKeyCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKey"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-api-key:write"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ApiKeys"
                ],
                "operationId": "Api Keys: Delete Api Key",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ApiKeys.ApiKey"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-api-key:write"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItemAnalytics/GetSharedUrls": {
            "get": {
                "tags": [
                    "ContentItemAnalytics"
                ],
                "operationId": "Content Item Analytics: Get Shared Urls",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentitemid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Dto.SearchResultDto[System.String]"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            ":read"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItemAnalytics/{id}": {
            "get": {
                "tags": [
                    "ContentItemAnalytics"
                ],
                "operationId": "Content Item Analytics: Get Content Item Analytics",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.Models.ContentItemAnalytics.AnalyticsItem"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            ":read"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItems/referenceobjects/{contentItemId}": {
            "get": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Gets the list of content items referenced by the specified content item, through the reference objects within the content type.",
                "description": "A content type can include reference objects that point to other content items.\r\n            Example: If you want all news articles in your site to point to related articles and videos, your content type for news articles must include reference objects for articles and videos.\r\n            When you create a specific news article (content item), you can set the reference objects in that news article to point to existing articles and videos.\r\n            This method retrieves the list of those existing articles and videos.",
                "operationId": "Content Items: Get Valid Reference Objects",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItemId",
                        "in": "path",
                        "description": "The unique identifier of the referring content item.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.Models.ReferenceObjectLinkedItems"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItems/ClientReferenceId/{clientReferenceId}": {
            "get": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Gets the content item with the specified client reference identifier.",
                "description": "The client reference identifier is an external identifier used to synchronize the content item with clients.\r\n            The HTML Pro module in Evoq uses the client reference identifier to associate the moduleId with the content item in the microservice.",
                "operationId": "Content Items: Get Content Item By Client Reference Id",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "clientReferenceId",
                        "in": "path",
                        "description": "The client reference identifier of the content item to get.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItems/{id}/usages": {
            "get": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Gets the number of times that the specified content item is used.",
                "operationId": "Content Items: Get Content Item Usages",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content item.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Increments the number of times that the specified content item is used.",
                "operationId": "Content Items: Post Content Item Usage",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content item.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:write"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Decrements the number of times that the specified content item is used.",
                "operationId": "Content Items: Delete Content Item Usage",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content item.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:write"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItems": {
            "get": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Gets all content items that match the specified criteria.",
                "operationId": "Content Items: Get Content Items",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "published",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contenttypeid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchtext",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldorder",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderasc",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdfrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdto",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.ContentItems.ContentItem]"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Creates a new content item.",
                "operationId": "Content Items: Post Content Item",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItem",
                        "in": "body",
                        "description": "The settings for the new content item.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    },
                    {
                        "name": "publish",
                        "in": "query",
                        "description": "If true, the new content item is immediately published. Default is false.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:write"
                        ]
                    }
                ]
            }
        },
        "/api/ContentItems/{id}": {
            "get": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Gets the content item with the specified identifier.",
                "operationId": "Content Items: Get Content Item",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content item to get.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Updates the specified content item.",
                "operationId": "Content Items: Put Content Item",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content item to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contentItem",
                        "in": "body",
                        "description": "The new settings for the specified content item.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    },
                    {
                        "name": "publish",
                        "in": "query",
                        "description": "If true, the new content item is immediately published. Default is false.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:write"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ContentItems"
                ],
                "summary": "Deletes the specified content item.",
                "operationId": "Content Items: Delete Content Item",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content item to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItem"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:write"
                        ]
                    }
                ]
            }
        },
        "/api/ContentTypes": {
            "get": {
                "tags": [
                    "ContentTypes"
                ],
                "summary": "Gets all content types that match the specified criteria.",
                "operationId": "Content Types: Get Content Types",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchtext",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldorder",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderasc",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdfrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdto",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.ContentType]"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-type:read"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ContentTypes"
                ],
                "summary": "Creates a new content type.",
                "operationId": "Content Types: Post Content Type",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentType",
                        "in": "body",
                        "description": "The settings for the new content type.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentType"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-type:write"
                        ]
                    }
                ]
            }
        },
        "/api/ContentTypes/{id}": {
            "get": {
                "tags": [
                    "ContentTypes"
                ],
                "summary": "Gets the content type with the specified identifier.",
                "operationId": "Content Types: Get Content Type",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content type to get.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentType"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-type:read"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ContentTypes"
                ],
                "summary": "Updates the specified content type.",
                "operationId": "Content Types: Put Content Type",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content type to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contentType",
                        "in": "body",
                        "description": "The new settings for the specified content type.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentType"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-type:write"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ContentTypes"
                ],
                "summary": "Deletes the specified content type.",
                "operationId": "Content Types: Delete Content Type",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the content type to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentType"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-type:write"
                        ]
                    }
                ]
            }
        },
        "/api/EmbedVisualizerInstances": {
            "post": {
                "tags": [
                    "EmbedVisualizerInstances"
                ],
                "operationId": "Embed Visualizer Instances: Post Embed Visualizer Instance",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "embedVisualizerInstanceCreation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Embed.EmbedVisualizerInstanceCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Embed.EmbedVisualizerInstanceResponse"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            ":write"
                        ]
                    }
                ]
            }
        },
        "/api/management/CopyTenant": {
            "post": {
                "tags": [
                    "Management"
                ],
                "summary": "Copy tenant operation",
                "operationId": "Management: Post Copy Tenant",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "postData",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Evoq.Microservices.Framework.Api.Controllers.CopyTenantInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/System.Object"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc:write"
                        ]
                    }
                ]
            }
        },
        "/api/PublishedContentItems/GetByIds": {
            "get": {
                "tags": [
                    "PublishedContentItems"
                ],
                "operationId": "Published Content Items: Get Published Content Items By Ids",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItemIds",
                        "in": "query",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.Services.Publishing.Dto.ContentItem"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            ":read"
                        ]
                    }
                ]
            }
        },
        "/api/PublishedContentItems": {
            "get": {
                "tags": [
                    "PublishedContentItems"
                ],
                "summary": "Gets the latest versions of all published content items that match the specified criteria.",
                "description": "Currently unpublished content items are not included, even if they were published in the past.",
                "operationId": "Published Content Items: Get Published Content Items",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "published",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contenttypeid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchtext",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldorder",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderasc",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdfrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdto",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Dto.SearchResultDto[StructuredContent.Services.Publishing.Dto.ContentItem]"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            ":read"
                        ]
                    }
                ]
            }
        },
        "/api/Revisions/{contentItemId}": {
            "get": {
                "tags": [
                    "Revisions"
                ],
                "operationId": "Revisions: Get Revisions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItemId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "searchtext",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldorder",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderasc",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdfrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdto",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItemRevision"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            }
        },
        "/api/Revisions/{contentItemId}/{version}": {
            "get": {
                "tags": [
                    "Revisions"
                ],
                "operationId": "Revisions: Get Revision",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItemId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItemRevision"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Revisions"
                ],
                "operationId": "Revisions: Delete Revision",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItemId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.ContentItems.ContentItemRevision"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:write"
                        ]
                    }
                ]
            }
        },
        "/api/Revisions/referenceobjects/{contentItemId}/{version}": {
            "get": {
                "tags": [
                    "Revisions"
                ],
                "operationId": "Revisions: Get Valid Reference Objects",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contentItemId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.Models.ReferenceObjectLinkedItems"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            }
        },
        "/api/Tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "operationId": "Tags: Get Tags",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pagesize",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tagprefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contenttypeid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.API.Dto.Tags.Tag"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-item:read"
                        ]
                    }
                ]
            }
        },
        "/api/Version": {
            "get": {
                "tags": [
                    "Version"
                ],
                "summary": "Gets the current version of the API.",
                "operationId": "Version: Get Version",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/System.Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/VisualizerEngine/Preview": {
            "get": {
                "tags": [
                    "VisualizerEngine"
                ],
                "operationId": "Visualizer Engine: Get Preview",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "visualizerId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contentItemIds",
                        "in": "query",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Visualizers.Dto.VisualizerRenderResult"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-render:read"
                        ]
                    }
                ]
            }
        },
        "/api/VisualizerEngine/Render": {
            "get": {
                "tags": [
                    "VisualizerEngine"
                ],
                "summary": "Generates the HTML code that uses the specified visualizer instance to display the associated content items.",
                "operationId": "Visualizer Engine: Get Render",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "visualizerInstanceId",
                        "in": "query",
                        "description": "The unique identifier of the visualizer instance to use.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "currentPageUrl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Visualizers.Dto.VisualizerRenderResult"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-render:read"
                        ]
                    }
                ]
            }
        },
        "/api/VisualizerEngine/RenderList": {
            "get": {
                "tags": [
                    "VisualizerEngine"
                ],
                "summary": "Generates the HTML code that uses the specified visualizer instance (of type List) to display the associated content items.",
                "operationId": "Visualizer Engine: Get Render List",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "visualizerInstanceId",
                        "in": "query",
                        "description": "The unique identifier of the List visualizer instance to use.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "currentPageUrl",
                        "in": "query",
                        "description": "The URL of the current page, used to create links to details for ListDetail visualizers.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "detailsUrl",
                        "in": "query",
                        "description": "The base URL to use to retrieve details of the associated List visualizer. Not for use with ListDetail visualizers. Default is null.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The current page number, used in list pagination.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Visualizers.Dto.VisualizerRenderResult"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-render:read"
                        ]
                    }
                ]
            }
        },
        "/api/VisualizerEngine/RenderDetail": {
            "get": {
                "tags": [
                    "VisualizerEngine"
                ],
                "summary": "Generates the HTML code that uses the specified visualizer instance (of type List) to display the associated content items.",
                "operationId": "Visualizer Engine: Get Render Detail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "visualizerInstanceId",
                        "in": "query",
                        "description": "The unique identifier of the List visualizer instance to use.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "The URL portion that identifies the specific content item to render.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "currentPageUrl",
                        "in": "query",
                        "description": "The URL of the current page, used to create links to details for visualizers.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Visualizers.Dto.VisualizerDetailRenderResult"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-render:read"
                        ]
                    }
                ]
            }
        },
        "/api/VisualizerInstances/{id}": {
            "get": {
                "tags": [
                    "VisualizerInstances"
                ],
                "summary": "Gets the visualizer instance with the specified identifier.",
                "operationId": "Visualizer Instances: Get Visualizer Instance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the visualizer instance to get.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerInstance"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-instance:read"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "VisualizerInstances"
                ],
                "summary": "Updates the specified visualizer instance.",
                "operationId": "Visualizer Instances: Put Visualizer Instance",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the visualizer instance to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visualizerInstanceDto",
                        "in": "body",
                        "description": "The new settings for the specified visualizer instance.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerInstance"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-instance:write"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "VisualizerInstances"
                ],
                "summary": "Deletes the specified visualizer instance.",
                "operationId": "Visualizer Instances: Delete Visualizer Instance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the visualizer instance to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerInstance"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-instance:write"
                        ]
                    }
                ]
            }
        },
        "/api/VisualizerInstances": {
            "post": {
                "tags": [
                    "VisualizerInstances"
                ],
                "summary": "Creates a new visualizer instance.",
                "operationId": "Visualizer Instances: Post Visualizer Instance",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "visualizerInstanceDto",
                        "in": "body",
                        "description": "The settings for the new visualizer instance.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerInstance"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer-instance:write"
                        ]
                    }
                ]
            }
        },
        "/api/Visualizers/export/{id}": {
            "post": {
                "tags": [
                    "Visualizers"
                ],
                "operationId": "Visualizers: Post Export",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:write"
                        ]
                    }
                ]
            }
        },
        "/api/Visualizers/import": {
            "post": {
                "tags": [
                    "Visualizers"
                ],
                "operationId": "Visualizers: Post Import",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "importType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Confirm",
                            "Overwrite",
                            "Duplicate"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.ImportResult"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:write"
                        ]
                    }
                ]
            }
        },
        "/api/Visualizers": {
            "get": {
                "tags": [
                    "Visualizers"
                ],
                "summary": "Gets all visualizers that match the specified criteria.",
                "operationId": "Visualizers: Get Visualizers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "contenttypeid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchtext",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startindex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxitems",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldorder",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderasc",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdfrom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdto",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.Visualizers.VisualizerBasicInfo]"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:read"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Visualizers"
                ],
                "summary": "Creates a new visualizer.",
                "operationId": "Visualizers: Post Visualizer",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "visualizerDto",
                        "in": "body",
                        "description": "The settings for the new visualizer.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Visualizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Visualizer"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:write"
                        ]
                    }
                ]
            }
        },
        "/api/Visualizers/{id}": {
            "get": {
                "tags": [
                    "Visualizers"
                ],
                "summary": "Gets the visualizer with the specified identifier.",
                "operationId": "Visualizers: Get Visualizer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the visualizer to get.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Visualizer"
                            }
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:read"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Visualizers"
                ],
                "summary": "Updates the specified visualizer.",
                "operationId": "Visualizers: Put Visualizer",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the visualizer to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "visualizerDto",
                        "in": "body",
                        "description": "The new settings for the specified visualizer.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Visualizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.Visualizer"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:write"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Visualizers"
                ],
                "summary": "Deletes the specified visualizer.",
                "operationId": "Visualizers: Delete Visualizer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the visualizer to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Visualizers.VisualizerBasicInfo"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-visualizer:write"
                        ]
                    }
                ]
            }
        },
        "/api/WebHooks": {
            "post": {
                "tags": [
                    "WebHooks"
                ],
                "summary": "Creates a new webhook for SC. If there is a webhook already associated to the callback Url, that webhook is returned.",
                "operationId": "Web Hooks: Post Web Hook",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "hook",
                        "in": "body",
                        "description": "The new item payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Hooks.HookCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructuredContent.API.Dto.Hooks.Hook"
                        }
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "oauth2": [
                            "sc-webhook:write"
                        ]
                    }
                ]
            }
        }
    },
    "definitions": {
        "StructuredContent.API.Dto.ApiKeys.ApiKey": {
            "description": "Represent the api key entity returned by the service",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Identifier",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the api key",
                    "type": "string"
                },
                "token": {
                    "description": "Token",
                    "type": "string"
                },
                "scopes": {
                    "description": "Scopes of the api keys separated with \";\"",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Created At",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Created By"
                },
                "updatedAt": {
                    "description": "Updated At",
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Updated By"
                }
            }
        },
        "StructuredContent.Models.UserInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.QueryDto": {
            "type": "object",
            "properties": {
                "searchText": {
                    "type": "string"
                },
                "startIndex": {
                    "type": "string"
                },
                "maxItems": {
                    "type": "string"
                },
                "fieldOrder": {
                    "type": "string"
                },
                "orderAsc": {
                    "type": "boolean"
                },
                "createdFrom": {
                    "type": "string"
                },
                "createdTo": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.ApiKeys.ApiKey]": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.API.Dto.ApiKeys.ApiKey"
                    }
                },
                "totalResultCount": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.ApiKeys.ApiKeyCreation": {
            "description": "Represent the request to create/update an api key",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the api key",
                    "type": "string"
                },
                "scopes": {
                    "description": "Scopes of the api keys separated with \";\"",
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.SharedUrlsQueryDto": {
            "type": "object",
            "properties": {
                "contentItemId": {
                    "type": "string"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxItems": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "StructuredContent.Services.Dto.SearchResultDto[System.String]": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "totalResultCount": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentItemAnalytics.AnalyticsItem": {
            "type": "object",
            "properties": {
                "analyticsType": {
                    "enum": [
                        "Visualizer",
                        "Embedded"
                    ],
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "publishCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "mostRecentDate": {
                    "type": "string"
                },
                "publications": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.Models.ContentItemAnalytics.Publication"
                    }
                }
            }
        },
        "StructuredContent.Models.ContentItemAnalytics.Publication": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "views": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "StructuredContent.Models.ReferenceObjectLinkedItems": {
            "type": "object",
            "properties": {
                "contentItems": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.Models.ContentItemLite"
                    }
                },
                "fieldName": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentItemLite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.ContentItems.ContentItem": {
            "description": "The JSONObject structure that defines a content item.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique identifier of the content item.",
                    "type": "string"
                },
                "slug": {
                    "description": "The portion of the URL that uniquely identifies this content item for retrieval.",
                    "type": "string"
                },
                "contentTypeId": {
                    "description": "The unique identifier of the content type of the content item.",
                    "type": "string"
                },
                "contentTypeName": {
                    "description": "The name of the content type of the content item.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the content item.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the content item.",
                    "type": "string"
                },
                "language": {
                    "description": "The language of the content item.",
                    "type": "string"
                },
                "alreadyPublished": {
                    "description": "Whether the content item has been published.",
                    "type": "boolean"
                },
                "details": {
                    "$ref": "System.Object",
                    "description": "The JObject structure that contains the values of all dynamic fields of the content item."
                },
                "currentVersion": {
                    "format": "int32",
                    "description": "The current version of the content item.",
                    "type": "integer"
                },
                "usages": {
                    "format": "int32",
                    "description": "The number of times that the content item is used.",
                    "type": "integer"
                },
                "createdAt": {
                    "description": "When the content item was created.",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who created the content item."
                },
                "updatedAt": {
                    "description": "When the content item was last updated.",
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who last updated the content item."
                },
                "stateId": {
                    "format": "int32",
                    "description": "A code that represents the current workflow state. If 0, the item is in draft (unpublished) mode. If 1, the item is published.",
                    "type": "integer"
                },
                "tags": {
                    "description": "The list of tags associated with the content item.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clientReferenceId": {
                    "description": "An external identifier used to synchronize the content item with clients, specifically the HTMLPro module in Evoq.",
                    "type": "string"
                },
                "seoSettings": {
                    "$ref": "StructuredContent.Models.SeoSettings"
                }
            }
        },
        "System.Object": {
            "type": "object",
            "properties": {}
        },
        "StructuredContent.Models.SeoSettings": {
            "type": "object",
            "properties": {
                "pageTitle": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "$ref": "StructuredContent.Models.ImageAsset"
                }
            }
        },
        "StructuredContent.Models.ImageAsset": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "fileId": {
                    "format": "int32",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.ContentItems.ContentItemQueryDto": {
            "description": "Extends the AdvancedQueryDto class with additional fields that are specific to content items.",
            "type": "object",
            "properties": {
                "published": {
                    "description": "If true, only published content items are included in the results.",
                    "type": "string"
                },
                "tags": {
                    "description": "The tags to search for. Comma-separated and URL-encoded. Example: tags=my%20tag,tag2,lastTag",
                    "type": "string"
                },
                "contentTypeId": {
                    "type": "string"
                },
                "searchText": {
                    "type": "string"
                },
                "startIndex": {
                    "type": "string"
                },
                "maxItems": {
                    "type": "string"
                },
                "fieldOrder": {
                    "type": "string"
                },
                "orderAsc": {
                    "type": "boolean"
                },
                "createdFrom": {
                    "type": "string"
                },
                "createdTo": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.ContentItems.ContentItem]": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.API.Dto.ContentItems.ContentItem"
                    }
                },
                "totalResultCount": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.ContentType]": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.API.Dto.ContentType"
                    }
                },
                "totalResultCount": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.ContentType": {
            "description": "The JSONObject structure that defines a content type.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique identifier of the content type.",
                    "type": "string"
                },
                "createdAt": {
                    "description": "When the content type was created.",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who created the content type."
                },
                "updatedAt": {
                    "description": "When the content type was last updated.",
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who last updated the content type."
                },
                "name": {
                    "description": "The name of the content type.",
                    "type": "string"
                },
                "icon": {
                    "description": "The icon associated with the content type.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the content type.",
                    "type": "string"
                },
                "enabled": {
                    "description": "If true, new content items of this content type can be created. Otherwise, not.",
                    "type": "boolean"
                },
                "fields": {
                    "description": "The set of fields that comprise the content type.",
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.Models.ContentTypeFields.ContentTypeField"
                    }
                },
                "numberOfItems": {
                    "format": "int32",
                    "description": "The number of content items that are of this content type.",
                    "type": "integer"
                },
                "numberOfVisualizers": {
                    "format": "int32",
                    "description": "The number of visualizers associated with this content type.",
                    "type": "integer"
                },
                "isSystem": {
                    "description": "If true, this content type is a default provided by DNN.",
                    "type": "boolean"
                },
                "properties": {
                    "$ref": "StructuredContent.Models.ContentTypeProperties",
                    "description": "The set of properties of the content type."
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentTypeField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "SingleLineText",
                        "MultiLineText",
                        "Assets",
                        "ReferenceObject",
                        "MultipleChoice",
                        "NumberSelector",
                        "DateTime",
                        "StaticText",
                        "ContentName",
                        "ContentTags",
                        "ContentDescription"
                    ],
                    "type": "string"
                },
                "descriptionActive": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "tooltipActive": {
                    "type": "boolean"
                },
                "tooltip": {
                    "type": "string"
                },
                "row": {
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentTypeProperties": {
            "type": "object",
            "properties": {
                "contentName": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.ContentName.ContentNameField"
                },
                "contentTags": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsField"
                },
                "contentDescription": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionField"
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentName.ContentNameField": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "SingleLineText",
                        "MultiLineText",
                        "Assets",
                        "ReferenceObject",
                        "MultipleChoice",
                        "NumberSelector",
                        "DateTime",
                        "StaticText",
                        "ContentName",
                        "ContentTags",
                        "ContentDescription"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.ContentName.ContentNameSettings"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "descriptionActive": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "tooltipActive": {
                    "type": "boolean"
                },
                "tooltip": {
                    "type": "string"
                },
                "row": {
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsField": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "SingleLineText",
                        "MultiLineText",
                        "Assets",
                        "ReferenceObject",
                        "MultipleChoice",
                        "NumberSelector",
                        "DateTime",
                        "StaticText",
                        "ContentName",
                        "ContentTags",
                        "ContentDescription"
                    ],
                    "type": "string"
                },
                "validation": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsValidation"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "descriptionActive": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "tooltipActive": {
                    "type": "boolean"
                },
                "tooltip": {
                    "type": "string"
                },
                "row": {
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionField": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "SingleLineText",
                        "MultiLineText",
                        "Assets",
                        "ReferenceObject",
                        "MultipleChoice",
                        "NumberSelector",
                        "DateTime",
                        "StaticText",
                        "ContentName",
                        "ContentTags",
                        "ContentDescription"
                    ],
                    "type": "string"
                },
                "validation": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionValidation"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "descriptionActive": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "tooltipActive": {
                    "type": "boolean"
                },
                "tooltip": {
                    "type": "string"
                },
                "row": {
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentName.ContentNameSettings": {
            "type": "object",
            "properties": {
                "nameGeneratorFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsValidation": {
            "type": "object",
            "properties": {
                "requireField": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation"
                },
                "standardErrorMessage": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionValidation": {
            "type": "object",
            "properties": {
                "requireField": {
                    "$ref": "StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation"
                },
                "standardErrorMessage": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.Visualizers.Embed.EmbedVisualizerInstanceCreation": {
            "type": "object",
            "properties": {
                "visualizerId": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "Basic",
                        "Detail",
                        "List",
                        "ListDetail"
                    ],
                    "type": "string"
                },
                "contentItemIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StructuredContent.API.Dto.Visualizers.Embed.EmbedVisualizerInstanceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "embedCode": {
                    "type": "string"
                }
            }
        },
        "Evoq.Microservices.Framework.Api.Controllers.CopyTenantInput": {
            "type": "object",
            "properties": {
                "operationId": {
                    "type": "string"
                },
                "sourceTenantId": {
                    "type": "string"
                },
                "destinationTenantId": {
                    "type": "string"
                },
                "callbackUrl": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Publishing.Dto.ContentItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "contentTypeName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "alreadyPublished": {
                    "type": "boolean"
                },
                "details": {
                    "$ref": "System.Object"
                },
                "currentVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo"
                },
                "seoSettings": {
                    "$ref": "StructuredContent.Models.SeoSettings"
                }
            }
        },
        "StructuredContent.Services.Dto.SearchResultDto[StructuredContent.Services.Publishing.Dto.ContentItem]": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.Services.Publishing.Dto.ContentItem"
                    }
                },
                "totalResultCount": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.ContentItems.ContentItemRevision": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "contentItemId": {
                    "type": "string"
                },
                "contentTypeId": {
                    "type": "string"
                },
                "version": {
                    "format": "int32",
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "details": {
                    "$ref": "System.Object"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo"
                },
                "seoSettings": {
                    "$ref": "StructuredContent.Models.SeoSettings"
                }
            }
        },
        "StructuredContent.API.Dto.Tags.TagsQueryDto": {
            "type": "object",
            "properties": {
                "startIndex": {
                    "description": "Start index in pagination.",
                    "type": "string"
                },
                "pageSize": {
                    "description": "Page size in pagination.",
                    "type": "string"
                },
                "tagPrefix": {
                    "description": "the tag prefix used to search",
                    "type": "string"
                },
                "tags": {
                    "description": "Delimit the tag search by a subset of tags",
                    "type": "string"
                },
                "contentTypeId": {
                    "description": "if not null, the search is done for content type aggregations",
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.Tags.Tag": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "contentItemsUsage": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "StructuredContent.Services.Visualizers.Dto.VisualizerRenderResult": {
            "type": "object",
            "properties": {
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cssFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "html": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "StructuredContent.Services.Visualizers.Dto.VisualizerRenderMetadata"
                }
            }
        },
        "StructuredContent.Services.Visualizers.Dto.VisualizerRenderMetadata": {
            "type": "object",
            "properties": {
                "vi": {
                    "type": "string"
                },
                "ci": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StructuredContent.Services.Visualizers.Dto.VisualizerDetailRenderResult": {
            "type": "object",
            "properties": {
                "contentItemId": {
                    "type": "string"
                },
                "openGraphInfo": {
                    "$ref": "StructuredContent.Services.Visualizers.Dto.OpenGraphInfo"
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cssFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "html": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "StructuredContent.Services.Visualizers.Dto.VisualizerRenderMetadata"
                }
            }
        },
        "StructuredContent.Services.Visualizers.Dto.OpenGraphInfo": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "keyWords": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.Visualizers.VisualizerInstance": {
            "description": "The JSONObject structure that defines a visualizer instance.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique identifier of this visualizer instance.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of this visualizer instance: Basic, Detail, List, or ListDetail. Default is Basic.",
                    "enum": [
                        "Basic",
                        "Detail",
                        "List",
                        "ListDetail"
                    ],
                    "type": "string"
                },
                "visualizerId": {
                    "description": "The unique identifier of the visualizer definition used to create this visualizer instance.",
                    "type": "string"
                },
                "detailsVisualizerId": {
                    "description": "The unique identifier of the visualizer details associated with this visualizer instance.",
                    "type": "string"
                },
                "contentItemIds": {
                    "description": "An array of the content item IDs associated with this visualizer instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "referencedContentItemIds": {
                    "description": "An array of the content item IDs referred to by the content items associated with this visualizer instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pagingEnabled": {
                    "description": "If true, the list of content items returned by a query are split into pages of a specified size. Otherwise, the entire list is always returned.",
                    "type": "boolean"
                },
                "dynamicFilteringEnabled": {
                    "type": "boolean"
                },
                "contentItemQuery": {
                    "$ref": "StructuredContent.Models.Visualizers.Query",
                    "description": "The query used to retrieve content items. For use with List and ListDetail visualizers."
                },
                "createdAt": {
                    "description": "When the visualizer instance was created.",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who created the visualizer instance."
                },
                "updatedAt": {
                    "description": "When the visualizer instance was last updated.",
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who last updated the visualizer instance."
                }
            }
        },
        "StructuredContent.Models.Visualizers.Query": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pageSize": {
                    "type": "string"
                },
                "fieldOrder": {
                    "type": "string"
                },
                "orderAsc": {
                    "type": "boolean"
                }
            }
        },
        "StructuredContent.API.Dto.Visualizers.ImportResult": {
            "description": "Contains the result of an import file process.",
            "type": "object",
            "properties": {
                "visualizer": {
                    "$ref": "StructuredContent.API.Dto.Visualizers.Visualizer",
                    "description": "All the metadata asociated with the visualizer."
                },
                "contentTypeNames": {
                    "description": "All the names of the content types that were created during the proces.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StructuredContent.API.Dto.Visualizers.Visualizer": {
            "description": "The JSONObject structure that defines a visualizer. Extends the VisualizerBasicInfo class.",
            "type": "object",
            "properties": {
                "header": {
                    "$ref": "StructuredContent.Services.Visualizers.Dto.Resource",
                    "description": "The HTML code that displays the header of the content item list."
                },
                "template": {
                    "$ref": "StructuredContent.Services.Visualizers.Dto.Resource",
                    "description": "The HTML code that displays each content item in the results list."
                },
                "footer": {
                    "$ref": "StructuredContent.Services.Visualizers.Dto.Resource",
                    "description": "The HTML code that displays the footer of the content item list."
                },
                "contentTypeId": {
                    "description": "The unique identifier of the content type associated with this visualizer definition.",
                    "type": "string"
                },
                "contentTypeName": {
                    "description": "The name of the content type associated with this visualizer definition.",
                    "type": "string"
                },
                "scripts": {
                    "description": "The list of web scripts used by the visualizer definition.",
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.Services.Visualizers.Dto.Resource"
                    }
                },
                "cssFiles": {
                    "description": "The list of CSS files used by the visualizer definition.",
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.Services.Visualizers.Dto.Resource"
                    }
                },
                "isSystem": {
                    "description": "If true, the visualizer definition is a default provided by DNN.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The unique identifier of the visualizer definition.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the visualizer definition.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the visualizer definition.",
                    "type": "string"
                },
                "iconUrl": {
                    "description": "The URL to the icon file associated with the visualizer definition.",
                    "type": "string"
                },
                "isNew": {
                    "description": "If true, the visualizer definition is new and is not yet associated with a content item.",
                    "type": "boolean"
                },
                "createdAt": {
                    "description": "When the visualizer definition was created.",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who created the visualizer definition."
                },
                "updatedAt": {
                    "description": "When the visualizer definition was last updated.",
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who last updated the visualizer definition."
                },
                "numberOfVisualizerInstances": {
                    "format": "int32",
                    "description": "The number of visualizer instances associated with the visualizer definition. Equal to the number of content items that use this visualizer.",
                    "type": "integer"
                }
            }
        },
        "StructuredContent.Services.Visualizers.Dto.Resource": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "isPrivate": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.AdvancedQueryDto": {
            "type": "object",
            "properties": {
                "contentTypeId": {
                    "type": "string"
                },
                "searchText": {
                    "type": "string"
                },
                "startIndex": {
                    "type": "string"
                },
                "maxItems": {
                    "type": "string"
                },
                "fieldOrder": {
                    "type": "string"
                },
                "orderAsc": {
                    "type": "boolean"
                },
                "createdFrom": {
                    "type": "string"
                },
                "createdTo": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.Services.Dto.SearchResultDto[StructuredContent.API.Dto.Visualizers.VisualizerBasicInfo]": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredContent.API.Dto.Visualizers.VisualizerBasicInfo"
                    }
                },
                "totalResultCount": {
                    "type": "string"
                }
            }
        },
        "StructuredContent.API.Dto.Visualizers.VisualizerBasicInfo": {
            "description": "The core structure of a visualizer definition.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique identifier of the visualizer definition.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the visualizer definition.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the visualizer definition.",
                    "type": "string"
                },
                "iconUrl": {
                    "description": "The URL to the icon file associated with the visualizer definition.",
                    "type": "string"
                },
                "isNew": {
                    "description": "If true, the visualizer definition is new and is not yet associated with a content item.",
                    "type": "boolean"
                },
                "createdAt": {
                    "description": "When the visualizer definition was created.",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who created the visualizer definition."
                },
                "updatedAt": {
                    "description": "When the visualizer definition was last updated.",
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo",
                    "description": "Who last updated the visualizer definition."
                },
                "numberOfVisualizerInstances": {
                    "format": "int32",
                    "description": "The number of visualizer instances associated with the visualizer definition. Equal to the number of content items that use this visualizer.",
                    "type": "integer"
                },
                "isSystem": {
                    "description": "If true, the visualizer definition is a default provided by DNN.",
                    "type": "boolean"
                }
            }
        },
        "StructuredContent.API.Dto.Hooks.HookCreation": {
            "description": "Webhook payload for subscription",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "url": {
                    "description": "Web hook endpoint",
                    "type": "string"
                },
                "secret": {
                    "description": "A secret key which is used to sign the HTTP POST request (for example a SHA256 hash).",
                    "type": "string"
                },
                "active": {
                    "description": "Set active to false",
                    "type": "boolean"
                },
                "events": {
                    "description": "Events to subscribe",
                    "type": "array",
                    "items": {
                        "enum": [
                            "ContentItemPublished",
                            "ContentItemCreated",
                            "ContentItemUpdated",
                            "ContentItemDeleted",
                            "ContentTypeCreated",
                            "ContentTypeUpdated",
                            "ContentTypeDeleted",
                            "VisualizerCreated",
                            "VisualizerUpdated",
                            "VisualizerDeleted"
                        ],
                        "type": "string"
                    }
                }
            }
        },
        "StructuredContent.API.Dto.Hooks.Hook": {
            "description": "Webhook information",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "StructuredContent.Models.UserInfo"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "StructuredContent.Models.UserInfo"
                },
                "description": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                },
                "secret": {
                    "description": "A secret key which is used to sign the HTTP POST request (for example a SHA256 hash).",
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "ContentItemPublished",
                            "ContentItemCreated",
                            "ContentItemUpdated",
                            "ContentItemDeleted",
                            "ContentTypeCreated",
                            "ContentTypeUpdated",
                            "ContentTypeDeleted",
                            "VisualizerCreated",
                            "VisualizerUpdated",
                            "VisualizerDeleted"
                        ],
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "description": "OAuth2 Implicit Grant",
            "flow": "implicit",
            "authorizationUrl": "https://qa-id.dnnapi.com/connect/authorize",
            "scopes": {
                "sc-type:read": "Try out the content type readonly APIs",
                "sc-type:write": "Try out the content type write APIs",
                "sc-item:read": "Try out the content item readonly APIs",
                "sc-item:write": "Try out the content item write APIs",
                "sc-visualizer:read": "Try out the Visualizer readonly APIs",
                "sc-visualizer:write": "Try out the Visualizer write APIs",
                "sc-visualizer-instance:read": "Try out the Visualizer Instance readonly APIs",
                "sc-visualizer-instance:write": "Try out the Visualizer Instance write APIs",
                "sc-visualizer-render:read": "Try out the Visualizer Render readonly APIs",
                "sc-webhook:read": "Try out the webhook readonly APIs",
                "sc-webhook:write": "Try out the webhook write APIs",
                "sc-api-key:read": "Try out the Api Key readonly APIs",
                "sc-api-key:write": "Try out the Api Key write APIs",
                "sc:manage": "Try out the Structured Content Manage APIs"
            }
        }
    }
}