

        <!-- =================================================== -->
        <!-- This section was generated by running: powershell -file mkapi.ps1 qa-sc.dnnapi.com/swagger/docs/v1 json\swagger.json bptext-api w:\_tools\mkapi\out w:\_content\api -->
        <!-- START GENERATED SECTION -->


        <section id="definitions">


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-ApiKeys-ApiKey"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-ApiKeys-ApiKey">
{
    "id" : "string"
    "name" : "string"
    "token" : "string"
    "scopes" : "string"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-ApiKeys-ApiKey"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-ApiKeys-ApiKey" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] Identifier</pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] Name of the api key</pd>
                </plentry>
                <plentry>
                    <pt>token</pt>
                    <pd>[string] Token</pd>
                </plentry>
                <plentry>
                    <pt>scopes</pt>
                    <pd>[string] Scopes of the api keys separated with ";"</pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] Created At</pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        Created By
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] Updated At</pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        Updated By
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-UserInfo"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-UserInfo">
{
    "id" : "string"
    "name" : "string"
    "thumbnail" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-UserInfo" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>thumbnail</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-QueryDto"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-QueryDto">
{
    "searchText" : "string"
    "startIndex" : "string"
    "maxItems" : "string"
    "fieldOrder" : "string"
    "orderAsc" : "boolean"
    "createdFrom" : "string"
    "createdTo" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-QueryDto"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-QueryDto" outputclass="docindent">
                <plentry>
                    <pt>searchText</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>startIndex</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>maxItems</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>fieldOrder</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>orderAsc</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>createdFrom</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdTo</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ApiKeys-ApiKey"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ApiKeys-ApiKey">
{
    "documents" : "array"
    "totalResultCount" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ApiKeys-ApiKey"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ApiKeys-ApiKey" outputclass="docindent">
                <plentry>
                    <pt>documents</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>totalResultCount</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-ApiKeys-ApiKeyCreation"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-ApiKeys-ApiKeyCreation">
{
    "name" : "string"
    "scopes" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-ApiKeys-ApiKeyCreation"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-ApiKeys-ApiKeyCreation" outputclass="docindent">
                <plentry>
                    <pt>name</pt>
                    <pd>[string] Name of the api key</pd>
                </plentry>
                <plentry>
                    <pt>scopes</pt>
                    <pd>[string] Scopes of the api keys separated with ";"</pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SharedUrlsQueryDto"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SharedUrlsQueryDto">
{
    "contentItemId" : "string"
    "startIndex" : "integer"
    "maxItems" : "integer"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SharedUrlsQueryDto"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SharedUrlsQueryDto" outputclass="docindent">
                <plentry>
                    <pt>contentItemId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>startIndex</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>maxItems</pt>
                    <pd>[integer] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SearchResultDto-System-String"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SearchResultDto-System-String">
{
    "documents" : "array"
    "totalResultCount" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SearchResultDto-System-String"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SearchResultDto-System-String" outputclass="docindent">
                <plentry>
                    <pt>documents</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>totalResultCount</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentItemAnalytics-AnalyticsItem"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentItemAnalytics-AnalyticsItem">
{
    "analyticsType" : "string"
    "channel" : "string"
    "publishCount" : "integer"
    "mostRecentDate" : "string"
    "publications" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentItemAnalytics-AnalyticsItem"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentItemAnalytics-AnalyticsItem" outputclass="docindent">
                <plentry>
                    <pt>analyticsType</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>channel</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>publishCount</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>mostRecentDate</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>publications</pt>
                    <pd>[array] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentItemAnalytics-Publication"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentItemAnalytics-Publication">
{
    "date" : "string"
    "url" : "string"
    "views" : "integer"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentItemAnalytics-Publication"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentItemAnalytics-Publication" outputclass="docindent">
                <plentry>
                    <pt>date</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>url</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>views</pt>
                    <pd>[integer] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ReferenceObjectLinkedItems"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ReferenceObjectLinkedItems">
{
    "contentItems" : "array"
    "fieldName" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ReferenceObjectLinkedItems"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ReferenceObjectLinkedItems" outputclass="docindent">
                <plentry>
                    <pt>contentItems</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>fieldName</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentItemLite"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentItemLite">
{
    "id" : "string"
    "name" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentItemLite"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentItemLite" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-ContentItems-ContentItem"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-ContentItems-ContentItem">
{
    "id" : "string"
    "slug" : "string"
    "contentTypeId" : "string"
    "contentTypeName" : "string"
    "name" : "string"
    "description" : "string"
    "language" : "string"
    "alreadyPublished" : "boolean"
    "details" : System.Object
    "currentVersion" : "integer"
    "usages" : "integer"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "stateId" : "integer"
    "tags" : "array"
    "clientReferenceId" : "string"
    "seoSettings" :  <!-- StructuredContent.Models.SeoSettings -->
        {
            "pageTitle" : "string"
            "description" : "string"
            "keywords" : "array"
            "image" :  <!-- StructuredContent.Models.ImageAsset -->
                {
                    "fileName" : "string"
                    "fileId" : "integer"
                    "url" : "string"
                }
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-ContentItems-ContentItem"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-ContentItems-ContentItem" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] The unique identifier of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>slug</pt>
                    <pd>[string] The portion of the URL that uniquely identifies this content item for retrieval.</pd>
                </plentry>
                <plentry>
                    <pt>contentTypeId</pt>
                    <pd>[string] The unique identifier of the content type of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>contentTypeName</pt>
                    <pd>[string] The name of the content type of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] The name of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] The description of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>language</pt>
                    <pd>[string] The language of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>alreadyPublished</pt>
                    <pd>[boolean] Whether the content item has been published.</pd>
                </plentry>
                <plentry>
                    <pt>details</pt>
                    <pd>
                        The JObject structure that contains the values of all dynamic fields of the content item.
                        <parml conkeyref="k-bpapi/parml-definitions-System-Object"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>currentVersion</pt>
                    <pd>[integer] The current version of the content item.</pd>
                </plentry>
                <plentry>
                    <pt>usages</pt>
                    <pd>[integer] The number of times that the content item is used.</pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] When the content item was created.</pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        Who created the content item.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] When the content item was last updated.</pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        Who last updated the content item.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>stateId</pt>
                    <pd>[integer] A code that represents the current workflow state. If 0, the item is in draft (unpublished) mode. If 1, the item is published.</pd>
                </plentry>
                <plentry>
                    <pt>tags</pt>
                    <pd>[array] The list of tags associated with the content item.</pd>
                </plentry>
                <plentry>
                    <pt>clientReferenceId</pt>
                    <pd>[string] An external identifier used to synchronize the content item with clients, specifically the HTMLPro module in Evoq.</pd>
                </plentry>
                <plentry>
                    <pt>seoSettings</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-SeoSettings"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-SeoSettings"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-SeoSettings">
{
    "pageTitle" : "string"
    "description" : "string"
    "keywords" : "array"
    "image" :  <!-- StructuredContent.Models.ImageAsset -->
        {
            "fileName" : "string"
            "fileId" : "integer"
            "url" : "string"
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-SeoSettings"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-SeoSettings" outputclass="docindent">
                <plentry>
                    <pt>pageTitle</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>keywords</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>image</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ImageAsset"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ImageAsset"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ImageAsset">
{
    "fileName" : "string"
    "fileId" : "integer"
    "url" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ImageAsset"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ImageAsset" outputclass="docindent">
                <plentry>
                    <pt>fileName</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>fileId</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>url</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-ContentItems-ContentItemQueryDto"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-ContentItems-ContentItemQueryDto">
{
    "published" : "string"
    "tags" : "string"
    "contentTypeId" : "string"
    "searchText" : "string"
    "startIndex" : "string"
    "maxItems" : "string"
    "fieldOrder" : "string"
    "orderAsc" : "boolean"
    "createdFrom" : "string"
    "createdTo" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-ContentItems-ContentItemQueryDto"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-ContentItems-ContentItemQueryDto" outputclass="docindent">
                <plentry>
                    <pt>published</pt>
                    <pd>[string] If true, only published content items are included in the results.</pd>
                </plentry>
                <plentry>
                    <pt>tags</pt>
                    <pd>[string] The tags to search for. Comma-separated and URL-encoded. Example: tags=my%20tag,tag2,lastTag</pd>
                </plentry>
                <plentry>
                    <pt>contentTypeId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>searchText</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>startIndex</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>maxItems</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>fieldOrder</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>orderAsc</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>createdFrom</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdTo</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentItems-ContentItem"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentItems-ContentItem">
{
    "documents" : "array"
    "totalResultCount" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentItems-ContentItem"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentItems-ContentItem" outputclass="docindent">
                <plentry>
                    <pt>documents</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>totalResultCount</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentType"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentType">
{
    "documents" : "array"
    "totalResultCount" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentType"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-ContentType" outputclass="docindent">
                <plentry>
                    <pt>documents</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>totalResultCount</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-ContentType"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-ContentType">
{
    "id" : "string"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "name" : "string"
    "icon" : "string"
    "description" : "string"
    "enabled" : "boolean"
    "fields" : "array"
    "numberOfItems" : "integer"
    "numberOfVisualizers" : "integer"
    "isSystem" : "boolean"
    "properties" :  <!-- StructuredContent.Models.ContentTypeProperties -->
        {
            "contentName" :  <!-- StructuredContent.Models.ContentTypeFields.ContentName.ContentNameField -->
                {
                    "type" : "string"
                    "settings" :  <!-- StructuredContent.Models.ContentTypeFields.ContentName.ContentNameSettings -->
                        {
                            "nameGeneratorFields" : "array"
                        }
                    "id" : "string"
                    "name" : "string"
                    "label" : "string"
                    "descriptionActive" : "boolean"
                    "description" : "string"
                    "tooltipActive" : "boolean"
                    "tooltip" : "string"
                    "row" : "integer"
                    "width" : "string"
                    "position" : "string"
                }
            "contentTags" :  <!-- StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsField -->
                {
                    "type" : "string"
                    "validation" :  <!-- StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsValidation -->
                        {
                            "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
                                {
                                    "active" : "boolean"
                                    "errorMessage" : "string"
                                }
                            "standardErrorMessage" : "string"
                        }
                    "id" : "string"
                    "name" : "string"
                    "label" : "string"
                    "descriptionActive" : "boolean"
                    "description" : "string"
                    "tooltipActive" : "boolean"
                    "tooltip" : "string"
                    "row" : "integer"
                    "width" : "string"
                    "position" : "string"
                }
            "contentDescription" :  <!-- StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionField -->
                {
                    "type" : "string"
                    "validation" :  <!-- StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionValidation -->
                        {
                            "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
                                {
                                    "active" : "boolean"
                                    "errorMessage" : "string"
                                }
                            "standardErrorMessage" : "string"
                        }
                    "id" : "string"
                    "name" : "string"
                    "label" : "string"
                    "descriptionActive" : "boolean"
                    "description" : "string"
                    "tooltipActive" : "boolean"
                    "tooltip" : "string"
                    "row" : "integer"
                    "width" : "string"
                    "position" : "string"
                }
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-ContentType"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-ContentType" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] The unique identifier of the content type.</pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] When the content type was created.</pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        Who created the content type.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] When the content type was last updated.</pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        Who last updated the content type.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] The name of the content type.</pd>
                </plentry>
                <plentry>
                    <pt>icon</pt>
                    <pd>[string] The icon associated with the content type.</pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] The description of the content type.</pd>
                </plentry>
                <plentry>
                    <pt>enabled</pt>
                    <pd>[boolean] If true, new content items of this content type can be created. Otherwise, not.</pd>
                </plentry>
                <plentry>
                    <pt>fields</pt>
                    <pd>[array] The set of fields that comprise the content type.</pd>
                </plentry>
                <plentry>
                    <pt>numberOfItems</pt>
                    <pd>[integer] The number of content items that are of this content type.</pd>
                </plentry>
                <plentry>
                    <pt>numberOfVisualizers</pt>
                    <pd>[integer] The number of visualizers associated with this content type.</pd>
                </plentry>
                <plentry>
                    <pt>isSystem</pt>
                    <pd>[boolean] If true, this content type is a default provided by DNN.</pd>
                </plentry>
                <plentry>
                    <pt>properties</pt>
                    <pd>
                        The set of properties of the content type.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeProperties"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentTypeField"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentTypeField">
{
    "id" : "string"
    "name" : "string"
    "label" : "string"
    "type" : "string"
    "descriptionActive" : "boolean"
    "description" : "string"
    "tooltipActive" : "boolean"
    "tooltip" : "string"
    "row" : "integer"
    "width" : "string"
    "position" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTypeField"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTypeField" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>label</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>type</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>descriptionActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>tooltipActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>tooltip</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>row</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>position</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeProperties"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeProperties">
{
    "contentName" :  <!-- StructuredContent.Models.ContentTypeFields.ContentName.ContentNameField -->
        {
            "type" : "string"
            "settings" :  <!-- StructuredContent.Models.ContentTypeFields.ContentName.ContentNameSettings -->
                {
                    "nameGeneratorFields" : "array"
                }
            "id" : "string"
            "name" : "string"
            "label" : "string"
            "descriptionActive" : "boolean"
            "description" : "string"
            "tooltipActive" : "boolean"
            "tooltip" : "string"
            "row" : "integer"
            "width" : "string"
            "position" : "string"
        }
    "contentTags" :  <!-- StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsField -->
        {
            "type" : "string"
            "validation" :  <!-- StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsValidation -->
                {
                    "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
                        {
                            "active" : "boolean"
                            "errorMessage" : "string"
                        }
                    "standardErrorMessage" : "string"
                }
            "id" : "string"
            "name" : "string"
            "label" : "string"
            "descriptionActive" : "boolean"
            "description" : "string"
            "tooltipActive" : "boolean"
            "tooltip" : "string"
            "row" : "integer"
            "width" : "string"
            "position" : "string"
        }
    "contentDescription" :  <!-- StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionField -->
        {
            "type" : "string"
            "validation" :  <!-- StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionValidation -->
                {
                    "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
                        {
                            "active" : "boolean"
                            "errorMessage" : "string"
                        }
                    "standardErrorMessage" : "string"
                }
            "id" : "string"
            "name" : "string"
            "label" : "string"
            "descriptionActive" : "boolean"
            "description" : "string"
            "tooltipActive" : "boolean"
            "tooltip" : "string"
            "row" : "integer"
            "width" : "string"
            "position" : "string"
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeProperties"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeProperties" outputclass="docindent">
                <plentry>
                    <pt>contentName</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameField"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>contentTags</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsField"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>contentDescription</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionField"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameField"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameField">
{
    "type" : "string"
    "settings" :  <!-- StructuredContent.Models.ContentTypeFields.ContentName.ContentNameSettings -->
        {
            "nameGeneratorFields" : "array"
        }
    "id" : "string"
    "name" : "string"
    "label" : "string"
    "descriptionActive" : "boolean"
    "description" : "string"
    "tooltipActive" : "boolean"
    "tooltip" : "string"
    "row" : "integer"
    "width" : "string"
    "position" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameField"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameField" outputclass="docindent">
                <plentry>
                    <pt>type</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>settings</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameSettings"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>label</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>descriptionActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>tooltipActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>tooltip</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>row</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>position</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsField"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsField">
{
    "type" : "string"
    "validation" :  <!-- StructuredContent.Models.ContentTypeFields.ContentTags.ContentTagsValidation -->
        {
            "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
                {
                    "active" : "boolean"
                    "errorMessage" : "string"
                }
            "standardErrorMessage" : "string"
        }
    "id" : "string"
    "name" : "string"
    "label" : "string"
    "descriptionActive" : "boolean"
    "description" : "string"
    "tooltipActive" : "boolean"
    "tooltip" : "string"
    "row" : "integer"
    "width" : "string"
    "position" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsField"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsField" outputclass="docindent">
                <plentry>
                    <pt>type</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>validation</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsValidation"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>label</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>descriptionActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>tooltipActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>tooltip</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>row</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>position</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionField"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionField">
{
    "type" : "string"
    "validation" :  <!-- StructuredContent.Models.ContentTypeFields.ContentDescription.ContentDescriptionValidation -->
        {
            "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
                {
                    "active" : "boolean"
                    "errorMessage" : "string"
                }
            "standardErrorMessage" : "string"
        }
    "id" : "string"
    "name" : "string"
    "label" : "string"
    "descriptionActive" : "boolean"
    "description" : "string"
    "tooltipActive" : "boolean"
    "tooltip" : "string"
    "row" : "integer"
    "width" : "string"
    "position" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionField"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionField" outputclass="docindent">
                <plentry>
                    <pt>type</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>validation</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionValidation"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>label</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>descriptionActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>tooltipActive</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>tooltip</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>row</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>position</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameSettings"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameSettings">
{
    "nameGeneratorFields" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameSettings"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentName-ContentNameSettings" outputclass="docindent">
                <plentry>
                    <pt>nameGeneratorFields</pt>
                    <pd>[array] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsValidation"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsValidation">
{
    "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
        {
            "active" : "boolean"
            "errorMessage" : "string"
        }
    "standardErrorMessage" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsValidation"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentTags-ContentTagsValidation" outputclass="docindent">
                <plentry>
                    <pt>requireField</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-Validation-RequireFieldValidation"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>standardErrorMessage</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionValidation"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionValidation">
{
    "requireField" :  <!-- StructuredContent.Models.ContentTypeFields.Validation.RequireFieldValidation -->
        {
            "active" : "boolean"
            "errorMessage" : "string"
        }
    "standardErrorMessage" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionValidation"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-ContentDescription-ContentDescriptionValidation" outputclass="docindent">
                <plentry>
                    <pt>requireField</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-Validation-RequireFieldValidation"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>standardErrorMessage</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-ContentTypeFields-Validation-RequireFieldValidation"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-ContentTypeFields-Validation-RequireFieldValidation">
{
    "active" : "boolean"
    "errorMessage" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-ContentTypeFields-Validation-RequireFieldValidation"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-ContentTypeFields-Validation-RequireFieldValidation" outputclass="docindent">
                <plentry>
                    <pt>active</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>errorMessage</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceCreation"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceCreation">
{
    "visualizerId" : "string"
    "type" : "string"
    "contentItemIds" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceCreation"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceCreation" outputclass="docindent">
                <plentry>
                    <pt>visualizerId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>type</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>contentItemIds</pt>
                    <pd>[array] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceResponse"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceResponse">
{
    "id" : "string"
    "embedCode" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceResponse"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Visualizers-Embed-EmbedVisualizerInstanceResponse" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>embedCode</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-Evoq-Microservices-Framework-Api-Controllers-CopyTenantInput"></ph> -->
            <ph id="ph-definitions-Evoq-Microservices-Framework-Api-Controllers-CopyTenantInput">
{
    "operationId" : "string"
    "sourceTenantId" : "string"
    "destinationTenantId" : "string"
    "callbackUrl" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-Evoq-Microservices-Framework-Api-Controllers-CopyTenantInput"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-Evoq-Microservices-Framework-Api-Controllers-CopyTenantInput" outputclass="docindent">
                <plentry>
                    <pt>operationId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>sourceTenantId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>destinationTenantId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>callbackUrl</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Publishing-Dto-ContentItem"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Publishing-Dto-ContentItem">
{
    "id" : "string"
    "slug" : "string"
    "type" : "string"
    "contentTypeName" : "string"
    "name" : "string"
    "description" : "string"
    "tags" : "array"
    "language" : "string"
    "alreadyPublished" : "boolean"
    "details" : System.Object
    "currentVersion" : "integer"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "seoSettings" :  <!-- StructuredContent.Models.SeoSettings -->
        {
            "pageTitle" : "string"
            "description" : "string"
            "keywords" : "array"
            "image" :  <!-- StructuredContent.Models.ImageAsset -->
                {
                    "fileName" : "string"
                    "fileId" : "integer"
                    "url" : "string"
                }
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Publishing-Dto-ContentItem"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Publishing-Dto-ContentItem" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>slug</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>type</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>contentTypeName</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>tags</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>language</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>alreadyPublished</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>details</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-System-Object"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>currentVersion</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>seoSettings</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-SeoSettings"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-Services-Publishing-Dto-ContentItem"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-Services-Publishing-Dto-ContentItem">
{
    "documents" : "array"
    "totalResultCount" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-Services-Publishing-Dto-ContentItem"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-Services-Publishing-Dto-ContentItem" outputclass="docindent">
                <plentry>
                    <pt>documents</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>totalResultCount</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-ContentItems-ContentItemRevision"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-ContentItems-ContentItemRevision">
{
    "id" : "string"
    "contentItemId" : "string"
    "contentTypeId" : "string"
    "version" : "integer"
    "language" : "string"
    "name" : "string"
    "slug" : "string"
    "description" : "string"
    "tags" : "array"
    "details" : System.Object
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "seoSettings" :  <!-- StructuredContent.Models.SeoSettings -->
        {
            "pageTitle" : "string"
            "description" : "string"
            "keywords" : "array"
            "image" :  <!-- StructuredContent.Models.ImageAsset -->
                {
                    "fileName" : "string"
                    "fileId" : "integer"
                    "url" : "string"
                }
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-ContentItems-ContentItemRevision"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-ContentItems-ContentItemRevision" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>contentItemId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>contentTypeId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>version</pt>
                    <pd>[integer] </pd>
                </plentry>
                <plentry>
                    <pt>language</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>slug</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>tags</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>details</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-System-Object"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>seoSettings</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-SeoSettings"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Tags-TagsQueryDto"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Tags-TagsQueryDto">
{
    "startIndex" : "string"
    "pageSize" : "string"
    "tagPrefix" : "string"
    "tags" : "string"
    "contentTypeId" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Tags-TagsQueryDto"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Tags-TagsQueryDto" outputclass="docindent">
                <plentry>
                    <pt>startIndex</pt>
                    <pd>[string] Start index in pagination.</pd>
                </plentry>
                <plentry>
                    <pt>pageSize</pt>
                    <pd>[string] Page size in pagination.</pd>
                </plentry>
                <plentry>
                    <pt>tagPrefix</pt>
                    <pd>[string] the tag prefix used to search</pd>
                </plentry>
                <plentry>
                    <pt>tags</pt>
                    <pd>[string] Delimit the tag search by a subset of tags</pd>
                </plentry>
                <plentry>
                    <pt>contentTypeId</pt>
                    <pd>[string] if not null, the search is done for content type aggregations</pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Tags-Tag"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Tags-Tag">
{
    "value" : "string"
    "contentItemsUsage" : "integer"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Tags-Tag"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Tags-Tag" outputclass="docindent">
                <plentry>
                    <pt>value</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>contentItemsUsage</pt>
                    <pd>[integer] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderResult"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderResult">
{
    "scripts" : "array"
    "cssFiles" : "array"
    "html" : "string"
    "metadata" :  <!-- StructuredContent.Services.Visualizers.Dto.VisualizerRenderMetadata -->
        {
            "vi" : "string"
            "ci" : "array"
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderResult"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderResult" outputclass="docindent">
                <plentry>
                    <pt>scripts</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>cssFiles</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>html</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>metadata</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderMetadata"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderMetadata"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderMetadata">
{
    "vi" : "string"
    "ci" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderMetadata"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderMetadata" outputclass="docindent">
                <plentry>
                    <pt>vi</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>ci</pt>
                    <pd>[array] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerDetailRenderResult"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerDetailRenderResult">
{
    "contentItemId" : "string"
    "openGraphInfo" :  <!-- StructuredContent.Services.Visualizers.Dto.OpenGraphInfo -->
        {
            "title" : "string"
            "content" : "string"
            "keyWords" : "string"
            "link" : "string"
            "imageUrl" : "string"
        }
    "scripts" : "array"
    "cssFiles" : "array"
    "html" : "string"
    "metadata" :  <!-- StructuredContent.Services.Visualizers.Dto.VisualizerRenderMetadata -->
        {
            "vi" : "string"
            "ci" : "array"
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerDetailRenderResult"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerDetailRenderResult" outputclass="docindent">
                <plentry>
                    <pt>contentItemId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>openGraphInfo</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-OpenGraphInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>scripts</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>cssFiles</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>html</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>metadata</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-VisualizerRenderMetadata"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Visualizers-Dto-OpenGraphInfo"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Visualizers-Dto-OpenGraphInfo">
{
    "title" : "string"
    "content" : "string"
    "keyWords" : "string"
    "link" : "string"
    "imageUrl" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-OpenGraphInfo"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Visualizers-Dto-OpenGraphInfo" outputclass="docindent">
                <plentry>
                    <pt>title</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>content</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>keyWords</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>link</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>imageUrl</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Visualizers-VisualizerInstance"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Visualizers-VisualizerInstance">
{
    "id" : "string"
    "type" : "string"
    "visualizerId" : "string"
    "detailsVisualizerId" : "string"
    "contentItemIds" : "array"
    "referencedContentItemIds" : "array"
    "pagingEnabled" : "boolean"
    "dynamicFilteringEnabled" : "boolean"
    "contentItemQuery" :  <!-- StructuredContent.Models.Visualizers.Query -->
        {
            "tags" : "array"
            "pageSize" : "string"
            "fieldOrder" : "string"
            "orderAsc" : "boolean"
        }
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-VisualizerInstance"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Visualizers-VisualizerInstance" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] The unique identifier of this visualizer instance.</pd>
                </plentry>
                <plentry>
                    <pt>type</pt>
                    <pd>[string] The type of this visualizer instance: Basic, Detail, List, or ListDetail. Default is Basic.</pd>
                </plentry>
                <plentry>
                    <pt>visualizerId</pt>
                    <pd>[string] The unique identifier of the visualizer definition used to create this visualizer instance.</pd>
                </plentry>
                <plentry>
                    <pt>detailsVisualizerId</pt>
                    <pd>[string] The unique identifier of the visualizer details associated with this visualizer instance.</pd>
                </plentry>
                <plentry>
                    <pt>contentItemIds</pt>
                    <pd>[array] An array of the content item IDs associated with this visualizer instance.</pd>
                </plentry>
                <plentry>
                    <pt>referencedContentItemIds</pt>
                    <pd>[array] An array of the content item IDs referred to by the content items associated with this visualizer instance.</pd>
                </plentry>
                <plentry>
                    <pt>pagingEnabled</pt>
                    <pd>[boolean] If true, the list of content items returned by a query are split into pages of a specified size. Otherwise, the entire list is always returned.</pd>
                </plentry>
                <plentry>
                    <pt>dynamicFilteringEnabled</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>contentItemQuery</pt>
                    <pd>
                        The query used to retrieve content items. For use with List and ListDetail visualizers.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-Visualizers-Query"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] When the visualizer instance was created.</pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        Who created the visualizer instance.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] When the visualizer instance was last updated.</pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        Who last updated the visualizer instance.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Models-Visualizers-Query"></ph> -->
            <ph id="ph-definitions-StructuredContent-Models-Visualizers-Query">
{
    "tags" : "array"
    "pageSize" : "string"
    "fieldOrder" : "string"
    "orderAsc" : "boolean"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-Visualizers-Query"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Models-Visualizers-Query" outputclass="docindent">
                <plentry>
                    <pt>tags</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>pageSize</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>fieldOrder</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>orderAsc</pt>
                    <pd>[boolean] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Visualizers-ImportResult"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Visualizers-ImportResult">
{
    "visualizer" :  <!-- StructuredContent.API.Dto.Visualizers.Visualizer -->
        {
            "header" :  <!-- StructuredContent.Services.Visualizers.Dto.Resource -->
                {
                    "content" : "string"
                    "name" : "string"
                    "uri" : "string"
                    "isPrivate" : "string"
                }
            "template" :  <!-- StructuredContent.Services.Visualizers.Dto.Resource -->
                {
                    "content" : "string"
                    "name" : "string"
                    "uri" : "string"
                    "isPrivate" : "string"
                }
            "footer" :  <!-- StructuredContent.Services.Visualizers.Dto.Resource -->
                {
                    "content" : "string"
                    "name" : "string"
                    "uri" : "string"
                    "isPrivate" : "string"
                }
            "contentTypeId" : "string"
            "contentTypeName" : "string"
            "scripts" : "array"
            "cssFiles" : "array"
            "isSystem" : "boolean"
            "id" : "string"
            "name" : "string"
            "description" : "string"
            "iconUrl" : "string"
            "isNew" : "boolean"
            "createdAt" : "string"
            "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
                {
                    "id" : "string"
                    "name" : "string"
                    "thumbnail" : "string"
                }
            "updatedAt" : "string"
            "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
                {
                    "id" : "string"
                    "name" : "string"
                    "thumbnail" : "string"
                }
            "numberOfVisualizerInstances" : "integer"
        }
    "contentTypeNames" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-ImportResult"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Visualizers-ImportResult" outputclass="docindent">
                <plentry>
                    <pt>visualizer</pt>
                    <pd>
                        All the metadata asociated with the visualizer.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-Visualizer"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>contentTypeNames</pt>
                    <pd>[array] All the names of the content types that were created during the proces.</pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Visualizers-Visualizer"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Visualizers-Visualizer">
{
    "header" :  <!-- StructuredContent.Services.Visualizers.Dto.Resource -->
        {
            "content" : "string"
            "name" : "string"
            "uri" : "string"
            "isPrivate" : "string"
        }
    "template" :  <!-- StructuredContent.Services.Visualizers.Dto.Resource -->
        {
            "content" : "string"
            "name" : "string"
            "uri" : "string"
            "isPrivate" : "string"
        }
    "footer" :  <!-- StructuredContent.Services.Visualizers.Dto.Resource -->
        {
            "content" : "string"
            "name" : "string"
            "uri" : "string"
            "isPrivate" : "string"
        }
    "contentTypeId" : "string"
    "contentTypeName" : "string"
    "scripts" : "array"
    "cssFiles" : "array"
    "isSystem" : "boolean"
    "id" : "string"
    "name" : "string"
    "description" : "string"
    "iconUrl" : "string"
    "isNew" : "boolean"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "numberOfVisualizerInstances" : "integer"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-Visualizer"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Visualizers-Visualizer" outputclass="docindent">
                <plentry>
                    <pt>header</pt>
                    <pd>
                        The HTML code that displays the header of the content item list.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-Resource"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>template</pt>
                    <pd>
                        The HTML code that displays each content item in the results list.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-Resource"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>footer</pt>
                    <pd>
                        The HTML code that displays the footer of the content item list.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-Resource"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>contentTypeId</pt>
                    <pd>[string] The unique identifier of the content type associated with this visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>contentTypeName</pt>
                    <pd>[string] The name of the content type associated with this visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>scripts</pt>
                    <pd>[array] The list of web scripts used by the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>cssFiles</pt>
                    <pd>[array] The list of CSS files used by the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>isSystem</pt>
                    <pd>[boolean] If true, the visualizer definition is a default provided by DNN.</pd>
                </plentry>
                <plentry>
                    <pt>id</pt>
                    <pd>[string] The unique identifier of the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] The name of the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] The description of the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>iconUrl</pt>
                    <pd>[string] The URL to the icon file associated with the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>isNew</pt>
                    <pd>[boolean] If true, the visualizer definition is new and is not yet associated with a content item.</pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] When the visualizer definition was created.</pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        Who created the visualizer definition.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] When the visualizer definition was last updated.</pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        Who last updated the visualizer definition.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>numberOfVisualizerInstances</pt>
                    <pd>[integer] The number of visualizer instances associated with the visualizer definition. Equal to the number of content items that use this visualizer.</pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Visualizers-Dto-Resource"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Visualizers-Dto-Resource">
{
    "content" : "string"
    "name" : "string"
    "uri" : "string"
    "isPrivate" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Visualizers-Dto-Resource"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Visualizers-Dto-Resource" outputclass="docindent">
                <plentry>
                    <pt>content</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>uri</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>isPrivate</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-AdvancedQueryDto"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-AdvancedQueryDto">
{
    "contentTypeId" : "string"
    "searchText" : "string"
    "startIndex" : "string"
    "maxItems" : "string"
    "fieldOrder" : "string"
    "orderAsc" : "boolean"
    "createdFrom" : "string"
    "createdTo" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-AdvancedQueryDto"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-AdvancedQueryDto" outputclass="docindent">
                <plentry>
                    <pt>contentTypeId</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>searchText</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>startIndex</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>maxItems</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>fieldOrder</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>orderAsc</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>createdFrom</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdTo</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo"></ph> -->
            <ph id="ph-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo">
{
    "documents" : "array"
    "totalResultCount" : "string"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-Services-Dto-SearchResultDto-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo" outputclass="docindent">
                <plentry>
                    <pt>documents</pt>
                    <pd>[array] </pd>
                </plentry>
                <plentry>
                    <pt>totalResultCount</pt>
                    <pd>[string] </pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo">
{
    "id" : "string"
    "name" : "string"
    "description" : "string"
    "iconUrl" : "string"
    "isNew" : "boolean"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "numberOfVisualizerInstances" : "integer"
    "isSystem" : "boolean"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Visualizers-VisualizerBasicInfo" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] The unique identifier of the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>name</pt>
                    <pd>[string] The name of the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] The description of the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>iconUrl</pt>
                    <pd>[string] The URL to the icon file associated with the visualizer definition.</pd>
                </plentry>
                <plentry>
                    <pt>isNew</pt>
                    <pd>[boolean] If true, the visualizer definition is new and is not yet associated with a content item.</pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] When the visualizer definition was created.</pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        Who created the visualizer definition.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] When the visualizer definition was last updated.</pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        Who last updated the visualizer definition.
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>numberOfVisualizerInstances</pt>
                    <pd>[integer] The number of visualizer instances associated with the visualizer definition. Equal to the number of content items that use this visualizer.</pd>
                </plentry>
                <plentry>
                    <pt>isSystem</pt>
                    <pd>[boolean] If true, the visualizer definition is a default provided by DNN.</pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Hooks-HookCreation"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Hooks-HookCreation">
{
    "description" : "string"
    "url" : "string"
    "secret" : "string"
    "active" : "boolean"
    "events" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Hooks-HookCreation"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Hooks-HookCreation" outputclass="docindent">
                <plentry>
                    <pt>description</pt>
                    <pd>[string] Description</pd>
                </plentry>
                <plentry>
                    <pt>url</pt>
                    <pd>[string] Web hook endpoint</pd>
                </plentry>
                <plentry>
                    <pt>secret</pt>
                    <pd>[string] A secret key which is used to sign the HTTP POST request (for example a SHA256 hash).</pd>
                </plentry>
                <plentry>
                    <pt>active</pt>
                    <pd>[boolean] Set active to false</pd>
                </plentry>
                <plentry>
                    <pt>events</pt>
                    <pd>[array] Events to subscribe</pd>
                </plentry>
            </parml>


            <!-- <ph conkeyref="k-bpapi/ph-definitions-StructuredContent-API-Dto-Hooks-Hook"></ph> -->
            <ph id="ph-definitions-StructuredContent-API-Dto-Hooks-Hook">
{
    "id" : "string"
    "createdAt" : "string"
    "createdBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "updatedAt" : "string"
    "updatedBy" :  <!-- StructuredContent.Models.UserInfo -->
        {
            "id" : "string"
            "name" : "string"
            "thumbnail" : "string"
        }
    "description" : "string"
    "active" : "boolean"
    "url" : "string"
    "secret" : "string"
    "events" : "array"
}
            </ph>
            <!-- <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-API-Dto-Hooks-Hook"><plentry><pt/><pd/></plentry></parml> -->
            <parml id="parml-definitions-StructuredContent-API-Dto-Hooks-Hook" outputclass="docindent">
                <plentry>
                    <pt>id</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdAt</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>createdBy</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>updatedAt</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>updatedBy</pt>
                    <pd>
                        <parml conkeyref="k-bpapi/parml-definitions-StructuredContent-Models-UserInfo"><plentry><pt/><pd/></plentry></parml>
                    </pd>
                </plentry>
                <plentry>
                    <pt>description</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>active</pt>
                    <pd>[boolean] </pd>
                </plentry>
                <plentry>
                    <pt>url</pt>
                    <pd>[string] </pd>
                </plentry>
                <plentry>
                    <pt>secret</pt>
                    <pd>[string] A secret key which is used to sign the HTTP POST request (for example a SHA256 hash).</pd>
                </plentry>
                <plentry>
                    <pt>events</pt>
                    <pd>[array] </pd>
                </plentry>
            </parml>


        </section>

        <!-- END GENERATED SECTION -->
        <!-- =================================================== -->
