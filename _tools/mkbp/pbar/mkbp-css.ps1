# Creates the CSS variables for the Persona Bar images.
# USAGE:   powershell -file mkbp-css.ps1 pbar-E90host.csv mkbp-css.out
# EXAMPLE: powershell -file mkbp-css.ps1 pbar-E90host.csv mkbp-css.out


$menusep = "&gt;"
$fnprefix = "pbar-"
$fnsuffix = ".csv"
$asciibase = 64     # 'A' is 65.
# $unit = "px"
$unit = "%"


function RefreshFile( [string] $fn )  {
    Write-Output "Recreating $fn ...."
    if ( Test-Path -Path $fn )  {
        Remove-Item  $fn  -Force  | Out-Null
    }
    New-Item  $fn  -Type file  -Force | Out-Null
}

function WriteHeader( [string] $prod, [string] $persona, [string] $script, [string[]] $arglist )  {
    Write-Output( "`r`n" )
    Write-Output( " /*" )
    Write-Output( " | -------------------- $prod - $persona --------------------" )
    Write-Output( " | This section was generated by running: powershell -file $script $arglist" )
    Write-Output( " | Persona Bar arrow positions" )
    Write-Output( " */" )
    Write-Output( "" )
}


function GetProdFromFilename  {
    param( [string] $fn )
    $cleanfn = $fn.TrimStart( $fnprefix ).TrimEnd( $fnsuffix )
    return $cleanfn.Substring( 0, 3 )
}

function GetPersonaFromFilename  {
    param( [string] $fn )
    $cleanfn = $fn.TrimStart( $fnprefix ).TrimEnd( $fnsuffix )
    return $cleanfn.Substring( 3, $cleanfn.Length - 3 )
}

function MkBlurb  {
    param( [string] $prod, [string] $persona, [string] $menu1, [string] $menu2, [int] $left1, [int] $top1, [int] $left2, [int] $top2 )

    $menu1squashed = $menu1.Replace( " ", "" )

    $menu2squashed = ""
    $bpid = "pb-$persona-$menu1squashed-$prod"
    if ( $menu2 -ne "" )  {
        $menu2squashed = $menu2.Replace( " ", "" ).Replace( ".NET", "NET" )
        $bpid  = "pb-$persona-$menu1squashed-$menu2squashed-$prod"
    }

    if ( $menu2 -eq "" )  {
        Write-Output( ".olpb1-$menu1squashed-$prod$persona  { color: var( --color-overlay ); font-size: 300%; position: absolute; left: $left1$unit; top: $top1$unit; }" )
    }
    else  {
        Write-Output( ".olpb2-$menu1squashed-$menu2squashed-$prod$persona  { color: var( --color-overlay ); font-size: 300%; position: absolute; left: $left2$unit; top: $top2$unit; }" )
    }

}


# MAIN
if ( $args.Count -gt 1 )  {
    $infile = $args[0]
    $outfile = $args[1]
    $prod = GetProdFromFilename $infile
    $persona = GetPersonaFromFilename $infile

    # RefreshFile $outfile

    WriteHeader $prod $persona $MyInvocation.MyCommand.Name $args | Out-File -Append $outfile

    $i = $asciibase
    $j = $asciibase
	foreach ( $ln in ( Import-Csv $infile ) )  {
        if ( $ln.menu2 -eq "" )  {
            $i++
            $j = $asciibase
            $pos = [char]$i
        }
        else  {
            $j++
            $pos = [char]$i + [char]$j
        }
        MkBlurb $prod $persona $ln.menu1 $ln.menu2 $ln.left1pc $ln.top1pc $ln.left2pc $ln.top2pc | Out-File -Append $outfile
    }
}
