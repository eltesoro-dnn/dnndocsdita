<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task xml:lang="en" id="tsk-CreateContainer">

    <title>Create a Container</title>

    <taskbody>

        <section id="overview">
            <title>Overview</title>

            <p>Containers allow designers to seamlessly integrate modules from many different developers into a cohesive website design. Containers can also include visual elements that allow website users to interact with the module.</p>
            <ul>
                <li>You can have a default container, which would be overridden by individual panes or modules if they provide their own style definitions.</li>
                <li>You can use different containers in a single page.</li>
                <li>You can mix and match any container with any CSS.</li>
            </ul>
        </section>


        <steps>
            <step>Create a new file for the container.
                <note type="note">
                    <ul>
                        <li>The container must contain exactly one pane called <codeph>ContentPane</codeph>.</li>
                        <li>The single pane must be defined as a server control by adding <codeph>runat="server"</codeph> to the element.</li>
                        <li>A pane can be one of the following HTML elements: &lt;td&gt; (table cells), &lt;div&gt;, &lt;p&gt;, and &lt;span&gt;.</li>
                        <li>(Optional) You can add the attribute <codeph>visible="false"</codeph> to the pane to prevent it from being displayed if no module is assigned to it.</li>
                    </ul>
                </note>

                <stepxmp>A very basic container in HTML.
                    <codeblock>
    <div id="ContentPane" runat="server"></div>
                    </codeblock>
                </stepxmp>

                <stepxmp>A very basic container in ASCX.
                    <!-- <codeblock>
    <%@ Control AutoEventWireup="false" Explicit="True" Inherits="DotNetNuke.UI.Containers.Container" %>
    <div id="ContentPane" runat="server"></div>
                    </codeblock> -->
                </stepxmp>
            </step>

            <step>(Optional) Add theme objects to your container for a more dynamic page.
                <p>The following theme objects are relevant to containers:</p>
                <ul>
                    <li>ACTIONBUTTON</li>
                    <li>ACTIONS</li>
                    <li>DROPDOWNACTIONS</li>
                    <li>ICON</li>
                    <li>LINKACTIONS</li>
                    <li>PRINTMODULE</li>
                    <li>TITLE</li>
                    <li>VISIBILITY</li>
                </ul>
                <p><ph conref="../../common/bptext/BP-TipSkinningTool.html" /></p>
            </step>
        </steps>
    </taskbody>

    <related-links>
        <link format="dita" href="./tsk-CreateCSS.dita"><linktext>Create CSS</linktext></link>
        <link format="dita" href="./tsk-CreateLayoutTemplate.dita"><linktext>Create Layout Template</linktext></link>
        <link format="html" href="http://www.dnnsoftware.com/wiki/dotnetnuke-skins"><linktext>DNN Wiki: DotNetNuke Skins</linktext></link>
        <link format="html" href="http://www.dnnsoftware.com/community-blog/cid/131995/dotnetnuke-skinning-101-part-3"><linktext>DNN Community blog: DotNetNuke Skinning 101 (Part 3) by Joe Brinkman</linktext></link>
        <link format="html" href="http://www.dnnsoftware.com/services/professional-training/training-videos-subscription/skinning-2-creating-html-skins"><linktext>DNN Professional Training: Creating HTML Skins</linktext></link>
    </related-links>

</task>
