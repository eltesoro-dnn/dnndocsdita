<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "http://docs.oasis-open.org/dita/v1.2/os/dtd1.2/technicalContent/dtd/reference.dtd">
<reference xml:lang="en" id="ref-visualizer-templates-filters">
    <title>Visualizer Templates: Token Filters</title>
    <titlealts>
        <navtitle>Token Filters</navtitle>
    </titlealts>


    <prolog>
        <author>wrET,1607</author>
        <copyright>
            <copyryear year="2016"></copyryear>
            <copyrholder>DNN Corp</copyrholder>
        </copyright>
        <metadata>
            <audience type="other" othertype="content manager" job="other" otherjob="aggregating" />
			<!--
            <prodinfo>
                <prodname>Evoq Content</prodname>
                <vrmlist><vrm version="9" release="0"/></vrmlist>
            </prodinfo>
			-->
            <prodinfo>
                <prodname>Evoq Engage</prodname>
                <vrmlist><vrm version="8" release="5"/></vrmlist>
            </prodinfo>
        </metadata>
    </prolog>


    <refbody>

        <section conkeyref="k-bptext/section-prodavail-E"></section>


        <section id="overview">
            <p>You can perform additional processing before displaying the value by passing the output through one or more filters separated by the pipeline.</p>
        </section>


        <section id="math">
            <title>Math</title>

            <simpletable relcolwidth="1* 3* 2* 1*">
                <sthead>
                    <stentry>Filter</stentry>
                    <stentry>Description</stentry>
                    <stentry>Example</stentry>
                    <stentry>Result</stentry>
                </sthead>
                <strow id="ceil">
                    <stentry><codeph>ceil</codeph></stentry>
                    <stentry>Rounds up to the nearest integer. Also see <xref format="dita" href="#ref-visualizer-templates-filters/floor">floor</xref>.</stentry>
                    <stentry><codeph>{{ 4.6 | ceil }}</codeph></stentry>
                    <stentry><codeph>5</codeph></stentry>
                </strow>
                <strow id="dividedby">
                    <stentry><codeph>divided_by</codeph></stentry>
                    <stentry>Divides the piped value by the specified integer. Rounds the result. Also see <xref format="dita" href="#ref-visualizer-templates-filters/modulo">modulo</xref>.</stentry>
                    <stentry><codeph>{{ 10 | divided_by: 3 }}</codeph></stentry>
                    <stentry><codeph>3</codeph></stentry>
                </strow>
                <strow id="floor">
                    <stentry><codeph>floor</codeph></stentry>
                    <stentry>Rounds up to the nearest integer. Also see <xref format="dita" href="#ref-visualizer-templates-filters/ceil">ceil</xref>.</stentry>
                    <stentry><codeph>{{ 4.6 | floor }}</codeph></stentry>
                    <stentry><codeph>4</codeph></stentry>
                </strow>
                <strow id="minus">
                    <stentry><codeph>minus</codeph></stentry>
                    <stentry>Subtracts the specified value from the piped value. Also see <xref format="dita" href="#ref-visualizer-templates-filters/plus">plus</xref>.</stentry>
                    <stentry><codeph>{{ 4 | minus: 2 }}</codeph></stentry>
                    <stentry><codeph>2</codeph></stentry>
                </strow>
                <strow id="modulo">
                    <stentry><codeph>modulo</codeph></stentry>
                    <stentry>Returns the modulo (remainder) when the piped value is divided by the specified value. Also see <xref format="dita" href="#ref-visualizer-templates-filters/dividedby">divided_by</xref>.</stentry>
                    <stentry><codeph>{{ 3 | modulo: 2 }}</codeph></stentry>
                    <stentry><codeph>1</codeph></stentry>
                </strow>
                <strow id="plus">
                    <stentry><codeph>plus</codeph></stentry>
                    <stentry>Adds the piped value and the specified value. If the values are numeric strings, the numbers are converted to integers, then added. Also see <xref format="dita" href="#ref-visualizer-templates-filters/minus">minus</xref>.</stentry>
                    <stentry><codeph>{{ 1 | plus: 1 }}</codeph></stentry>
                    <stentry><codeph>2</codeph></stentry>
                </strow>
                <strow id="round">
                    <stentry><codeph>round</codeph></stentry>
                    <stentry>Rounds the piped value to the nearest integer for the specified number of decimals.</stentry>
                    <stentry><codeph>{{ 4.5612 | round: 2 }}</codeph></stentry>
                    <stentry><codeph>4.56</codeph></stentry>
                </strow>
                <strow id="times">
                    <stentry><codeph>times</codeph></stentry>
                    <stentry>Multiplies the piped value with the specified value.</stentry>
                    <stentry><codeph>{{ 5 | times: 4 }}</codeph></stentry>
                    <stentry><codeph>20</codeph></stentry>
                </strow>
            </simpletable>
        </section>


        <section id="strings">
            <title>Strings</title>

            <simpletable relcolwidth="1* 3* 2* 1*">
                <sthead>
                    <stentry>Filter</stentry>
                    <stentry>Description</stentry>
                    <stentry>Example</stentry>
                    <stentry>Result</stentry>
                </sthead>
                <strow id="append">
                    <stentry><codeph>append</codeph></stentry>
                    <stentry>Appends the specified string to the end of the piped string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/prepend">prepend</xref>.</stentry>
                    <stentry><codeph>{{ "foo" | append: "bar" }}</codeph></stentry>
                    <stentry><codeph>foobar</codeph></stentry>
                </strow>
                <strow id="capitalize">
                    <stentry><codeph>capitalize</codeph></stentry>
                    <stentry>Capitalizes the first letters of words in the piped string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/upcase">upcase</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/downcase">downcase</xref>.</stentry>
                    <stentry><codeph>{{ "capitalize me." | capitalize }}</codeph></stentry>
                    <stentry><codeph>Capitalize Me.</codeph></stentry>
                </strow>
                <strow id="downcase">
                    <stentry><codeph>downcase</codeph></stentry>
                    <stentry>Converts the piped string to lowercase. Also see <xref format="dita" href="#ref-visualizer-templates-filters/upcase">upcase</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/capitalize">capitalize</xref>.</stentry>
                    <stentry><codeph>{{ "This Is Not a Title-cased String." | downcase }}</codeph></stentry>
                    <stentry><codeph>this is not a title-cased string.</codeph></stentry>
                </strow>
                <strow id="lstrip">
                    <stentry><codeph>lstrip</codeph></stentry>
                    <stentry>Removes all whitespace from the beginning of the piped string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/rstrip">rstrip</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/strip">strip</xref>.</stentry>
                    <stentry><codeph>{{ "   hello   " | lstrip }}</codeph></stentry>
                    <stentry><codeph>"hello   "</codeph></stentry>
                </strow>
                <strow id="prepend">
                    <stentry><codeph>prepend</codeph></stentry>
                    <stentry>Prepends a string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/append">append</xref>.</stentry>
                    <stentry><codeph>{{ "bar" | prepend: "foo" }}</codeph></stentry>
                    <stentry><codeph>foobar</codeph></stentry>
                </strow>
                <strow id="removefirst">
                    <stentry><codeph>remove_first</codeph></stentry>
                    <stentry>Removes the first occurrence of the specified string from the piped string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/remove">remove</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/replace">replace</xref>.</stentry>
                    <stentry><codeph>{{ "barbar" | remove_first: "bar" }}</codeph></stentry>
                    <stentry><codeph>bar</codeph></stentry>
                </strow>
                <strow id="remove">
                    <stentry><codeph>remove</codeph></stentry>
                    <stentry>Removes every occurrence of the specified string from the piped string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/removefirst">remove_first</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/replace">replace</xref>.</stentry>
                    <stentry><codeph>{{ "foobarfoobar" | remove: "foo" }}</codeph></stentry>
                    <stentry><codeph>barbar</codeph></stentry>
                </strow>
                <strow id="replacefirst">
                    <stentry><codeph>replace_first</codeph></stentry>
                    <stentry>Replaces the first occurrence of the first specified string with the second specified string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/replace">replace</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/removefirst">remove_first</xref>.</stentry>
                    <stentry><codeph>{{ "barbar" | replace_first: "bar", "foo" }}</codeph></stentry>
                    <stentry><codeph>foobar</codeph></stentry>
                </strow>
                <strow id="replace">
                    <stentry><codeph>replace</codeph></stentry>
                    <stentry>Replaces every occurrence of the first specified string with the second specified string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/replacefirst">replace_first</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/remove">remove</xref>.</stentry>
                    <stentry><codeph>{{ "foofoo" | replace: "foo", "bar" }}</codeph></stentry>
                    <stentry><codeph>barbar</codeph></stentry>
                </strow>
                <strow id="rstrip">
                    <stentry><codeph>rstrip</codeph></stentry>
                    <stentry>Removes all trailing (ending) whitespace characters from the piped string. Also see <xref format="dita" href="#ref-visualizer-templates-filters/lstrip">lstrip</xref> and <xref format="dita" href="#ref-visualizer-templates-filters/strip">strip</xref>.</stentry>
                    <stentry><codeph>{{ "   hello   " | rstrip }}</codeph></stentry>
                    <stentry><codeph>"   hello"</codeph></stentry>
                </strow>
                <strow id="sizestring">
                    <stentry><codeph>size</codeph></stentry>
                    <stentry>Returns the size of the piped array or string.</stentry>
                    <stentry><codeph>{{ "hello" | size }}</codeph></stentry>
                    <stentry><codeph>5</codeph></stentry>
                </strow>
                <strow id="slice">
                    <stentry><codeph>slice</codeph></stentry>
                    <stentry>Returns a substring from the piped string, from the specified offset and with the specified number of characters. A negative offset will start counting from the end of the string.</stentry>
                    <stentry><codeph>{{ "hello" | slice: -3, 3 }}</codeph></stentry>
                    <stentry><codeph>llo</codeph></stentry>
                </strow>
                <strow id="split">
                    <stentry><codeph>split</codeph></stentry>
                    <stentry>Splits the piped string where the specified pattern is found, not including the search pattern.</stentry>
                    <stentry><codeph>{{ "a~b" | split: "~" }}</codeph></stentry>
                    <stentry><codeph>["a","b"]</codeph></stentry>
                </strow>
                <strow id="stripnewlines">
                    <stentry><codeph>strip_newlines</codeph></stentry>
                    <stentry>Removes all newline characters ("\n") from the piped string.</stentry>
                    <stentry/>
                    <stentry/>
                </strow>
                <strow id="strip">
                    <stentry><codeph>strip</codeph></stentry>
                    <stentry>Removes all leading and trailing whitespace characters from the piped string.</stentry>
                    <stentry><codeph>{{ "   hello   " | lstrip }}</codeph></stentry>
                    <stentry><codeph>"hello"</codeph></stentry>
                </strow>
                <strow id="truncate">
                    <stentry><codeph>truncate</codeph></stentry>
                    <stentry>Truncates the piped string down to the specified number of characters and appends the optional second parameter.</stentry>
                    <stentry><codeph>{{ "foobarfoobar" | truncate: 5, "." }}</codeph></stentry>
                    <stentry><codeph>foob.</codeph></stentry>
                </strow>
                <strow id="truncatewords">
                    <stentry><codeph>truncatewords</codeph></stentry>
                    <stentry>Truncates the piped string down to the specified number of words.</stentry>
                    <stentry><codeph>{{ "foo bar foo bar" | truncatewords: 3 }}</codeph></stentry>
                    <stentry><codeph>foo bar foo</codeph></stentry>
                </strow>
                <strow id="upcase">
                    <stentry><codeph>upcase</codeph></stentry>
                    <stentry>Converts the piped string to uppercase.</stentry>
                    <stentry><codeph>{{ "hello" | upcase }}</codeph></stentry>
                    <stentry><codeph>HELLO</codeph></stentry>
                </strow>
            </simpletable>
        </section>


        <section id="htmlandurlencodings">
            <title>HTML and URL Encodings</title>

            <p></p>
            <simpletable relcolwidth="1* 3* 2* 1*">
                <sthead>
                    <stentry>Filter</stentry>
                    <stentry>Description</stentry>
                    <stentry>Example</stentry>
                    <stentry>Result</stentry>
                </sthead>
                <strow id="escapeonce">
                    <stentry><codeph>escape_once</codeph></stentry>
                    <stentry>Converts special characters in the string into HTML escape characters without affecting characters that are already HTML-escaped.</stentry>
                    <stentry/>
                    <stentry/>
                </strow>
                <strow id="escapeall">
                    <stentry><codeph>escape</codeph></stentry>
                    <stentry>Converts special characters in the string into HTML escape characters.</stentry>
                    <stentry/>
                    <stentry/>
                </strow>
                <strow id="newlinetobr">
                    <stentry><codeph>newline_to_br</codeph></stentry>
                    <stentry>Replaces each newline ("\n") with an HTML break (&lt;br/&gt;).</stentry>
                    <stentry/>
                    <stentry/>
                </strow>
                <strow id="striphtml">
                    <stentry><codeph>strip_html</codeph></stentry>
                    <stentry>Removes all HTML-encoded characters from the piped string.</stentry>
                    <stentry/>
                    <stentry/>
                </strow>
                <strow id="urlencode">
                    <stentry><codeph>url_encode</codeph></stentry>
                    <stentry>Converts the piped string to URL encoding.</stentry>
                    <stentry/>
                    <stentry/>
                </strow>
            </simpletable>
        </section>


        <section id="arrays">
            <title>Arrays</title>

            <simpletable relcolwidth="1* 3* 2* 1*">
                <sthead>
                    <stentry>Filter</stentry>
                    <stentry>Description</stentry>
                    <stentry>Example</stentry>
                    <stentry>Result</stentry>
                </sthead>
                <strow id="first">
                    <stentry><codeph>first</codeph></stentry>
                    <stentry>Returns the first element of the piped array. Also see <xref format="dita" href="#ref-visualizer-templates-filters/last">last</xref>.</stentry>
                    <stentry><codeph>{{ ["dddd","bb","ccc","a"] | first }}</codeph></stentry>
                    <stentry><codeph>dddd</codeph></stentry>
                </strow>
                <strow id="join">
                    <stentry><codeph>join</codeph></stentry>
                    <stentry>Combines the elements of the piped array with the specified character inserted between each element.</stentry>
                    <stentry><codeph>{{ ["dddd","bb","ccc","a"] | join "-" }}</codeph></stentry>
                    <stentry><codeph>dddd-bb-ccc-a</codeph></stentry>
                </strow>
                <strow id="last">
                    <stentry><codeph>last</codeph></stentry>
                    <stentry>Returns the last element of the piped array. Also see <xref format="dita" href="#ref-visualizer-templates-filters/first">first</xref>.</stentry>
                    <stentry><codeph>{{ ["dddd","bb","ccc","a"] | last }}</codeph></stentry>
                    <stentry><codeph>a</codeph></stentry>
                </strow>
                <strow id="map">
                    <stentry><codeph>map</codeph></stentry>
                    <stentry>Maps/Collects an array on a given property.</stentry>
                    <stentry><codeph></codeph></stentry>
                    <stentry><codeph></codeph></stentry>
                </strow>
                <strow id="reverse">
                    <stentry><codeph>reverse</codeph></stentry>
                    <stentry>Reverses the sort of the piped array. See <xref format="dita" href="#ref-visualizer-templates-filters/sort">sort</xref>.</stentry>
                    <stentry><codeph>{{ ["dddd","bb","ccc","a"] | reverse }}</codeph></stentry>
                    <stentry><codeph>["a","ccc","bb","dddd"]</codeph></stentry>
                </strow>
                <strow id="sizearray">
                    <stentry><codeph>size</codeph></stentry>
                    <stentry>Returns the size of the piped array or string.</stentry>
                    <stentry><codeph>{{ ["dddd","bb","ccc","a"] | size }}</codeph></stentry>
                    <stentry><codeph>4</codeph></stentry>
                </strow>
                <strow id="sort">
                    <stentry><codeph>sort</codeph></stentry>
                    <stentry>Sorts the elements of the array. See <xref format="dita" href="#ref-visualizer-templates-filters/reverse">reverse</xref>.</stentry>
                    <stentry><codeph>{{ ["dddd","bb","ccc","a"] | sort }}</codeph></stentry>
                    <stentry><codeph>["a","bb","ccc","dddd"]</codeph></stentry>
                </strow>
                <strow id="uniq">
                    <stentry><codeph>uniq</codeph></stentry>
                    <stentry>Removes duplicate elements from the piped array, using the specified (optional) property to test for uniqueness.</stentry>
                    <stentry><codeph>{{ ["a","dddd","bb","ccc","a"] | uniq }}</codeph></stentry>
                    <stentry><codeph>["dddd","bb","ccc","a"]</codeph></stentry>
                </strow>
            </simpletable>
        </section>


        <section id="misc">
            <title>Misc</title>

            <simpletable relcolwidth="1* 3* 2* 1*">
                <sthead>
                    <stentry>Filter</stentry>
                    <stentry>Description</stentry>
                    <stentry>Example</stentry>
                    <stentry>Result</stentry>
                </sthead>
                <strow id="date">
                    <stentry><codeph>date</codeph></stentry>
                    <stentry>Reformats a date. (See <xref format="dita" href="visualizer-templates-datetime.dita">Datetime</xref>.)</stentry>
                    <stentry><codeph>{{meetingTimeslot | date: "HH:mm"}}</codeph></stentry>
                    <stentry><codeph>18:00</codeph></stentry>
                </strow>
                <strow id="default">
                    <stentry><codeph>default</codeph></stentry>
                    <stentry>If the variable is <codeph>null</codeph> or the empty string, returns the given value. Otherwise, returns the value of the variable.</stentry>
                    <stentry><codeph>{{ undefined_variable | default: "This default value" }}</codeph></stentry>
                    <stentry><codeph>This default value</codeph></stentry>
                </strow>
                <strow id="pluralize">
                    <stentry><codeph>pluralize</codeph></stentry>
                    <stentry>If the piped value is 1, returns the first word (which is the singular version) in a comma-separated pair of words. Otherwise, returns the second word (which is the plural version ).</stentry>
                    <stentry><codeph>{{ 3 | pluralize: "item", "items" }}</codeph></stentry>
                    <stentry><codeph>items</codeph></stentry>
                </strow>
            </simpletable>

        </section>

    </refbody>


    <related-links>
        <link format="html" scope="external" href="https://github.com/Shopify/liquid/wiki/liquid-for-designers"><linktext>Source: Liquid for Designers</linktext></link>
        <link format="html" scope="external" href="http://dotliquidmarkup.org/"><linktext>DotLiquid</linktext></link>
    </related-links>

</reference>
